###############
# CORE SETTINGS
###############

# WARNING: Required in production environment.
# WARNING: Need to be kept secret.
# use 'openssl rand -base64 50' to generate a secret key
# DJANGO_SECRET_KEY=

# WARNING: Required in production environment.
# WARNING: Need to be kept secret.
# use 'openssl genpkey -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:2048' to generate a private key
# use 'openssl rsa -pubout -in private_key.pem -out public_key.pem' to generate a public key
# SIGNING_KEY_FILE=
# VERIFYING_KEY_FILE=

# Enable debug mode. Default False.
DEBUG=False

# Superadmin default credentials
# ADMIN_EMAIL=admin@mail.com
# ADMIN_USERNAME=admin
# ADMIN_PASSWORD=admin
# ADMIN_GROUP=

##########
# STORAGES
##########

# POSTGRES DB SETTING (REQUIRED)
POSTGRES_DB=jumper-db
POSTGRES_USER=admin
POSTGRES_PASSWORD=secret
POSTGRES_HOST=jumper-postgres
# POSTGRES_PORT=5432

# OBJECT STORAGE DB SETTING (REQUIRED)
S3_ACCESS_KEY_ID=mysecretkey
S3_SECRET_ACCESS_KEY=myaccesskey
S3_BUCKET_NAME=jumper
S3_ENDPOINT_HOST=jumper-minio
# S3_ENDPOINT_PORT=9000
# S3_ADMIN_BOARD_PORT=9001

###########################
# AUTHENTICATION (OPTIONAL)
###########################

# If you use other authentication methods, like OpenID Connect,
# you can disable password authentication by setting this to False.
# JWT_ENABLED=True
# Lifetimes in minutes.
# ACCESS_TOKEN_LIFETIME=1440
# REFRESH_TOKEN_LIFETIME=43200

# OIDC SETTINGS (OPTIONAL)

# OIDC_ENABLED=False

# OIDC_RP_CLIENT_ID=
# OIDC_RP_CLIENT_SECRET=

# OIDC_OP_AUTHORIZATION_ENDPOINT=https://<auth-provider>/application/o/authorize/
# OIDC_OP_TOKEN_ENDPOINT=https://<auth-provider>/application/o/token/
# OIDC_OP_USER_ENDPOINT=https://<auth-provider>/application/o/userinfo/
# OIDC_OP_JWKS_ENDPOINT=https://<auth-provider>/application/o/<app>/jwks/
# OIDC_OP_LOGOUT_URL_METHOD=https://<auth-provider>/application/o/<app>/end-session/
# ALLOW_LOGOUT_GET_METHOD=False
# OIDC_RP_SIGN_ALGO=RS256

# Email attribute will be used as unique identifier for the user.
# Jumper will try to get username and avatar information from the OIDC provider.
# OIDC_RP_SCOPES='openid email profile'
# OIDC_USERNAME_ATTRIBUTE=preferred_username
# OIDC_AVATAR_ATTRIBUTE=picture

# Visual name of the OIDC provider, used in the frontend login page.
# OIDC_PROVIDER_NAME=

# LOGIN_URL='oidc_authentication_init'
# LOGIN_REDIRECT_URL=http://localhost:5173/
# LOGIN_REDIRECT_URL_FAILURE=http://localhost:5173/login
# LOGOUT_REDIRECT_URL=http://localhost:5173/login

# SCIM SETTINGS (OPTIONAL)

# SCIM_ENABLED=False
# Token to authenticate SCIM requests (WARNING: need to be kept secret).
# use 'openssl rand -base64 50' to generate a secret token.
# SCIM_BEARER_TOKEN=

# Jumper host where to redirect in SCIM provider.
# JUMPER_HOST=http://localhost
# JUMPER_PORT=9630

# If False, users will be desactivated instead of deleted,
# when deleted from the SCIM provider.
# SCIM_ALLOW_USER_DELETION=True

# By default, if the SCIM provider tries to create a user
# with an email that already exists in Peacock, an error is returned.
# If True, the user will be updated with the new information without error.
# SCIM_ALLOW_USER_CREATION_CONFLIT=False

#########################
# EMAILS - SMTP (OPTIONAL)
#########################
# required for recovery password email

# SMTP settings
# EMAIL_HOST=mail.provider.com
# EMAIL_PORT=25
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=
# EMAIL_HOST_PASSWORD=

# Email address to use as from email.
# DEFAULT_FROM_EMAIL=no-reply@something.com

# Gallery frontend where to redirect in email for password recovery.
# GALLERY_HOST=http://localhost:5173

####################
# LOGGING (OPTIONAL)
####################

# Log file where to write django application logs.
# DJANGO_LOG_FILE=
# Log level for django application logs. Default INFO.
# DJANGO_LOG_FILE_LEVEL=INFO

# Log file where to write celery application logs.
# CELERY_LOG_FILE=
# Log level for celery application logs. Default INFO.
# CELERY_LOG_FILE_LEVEL=INFO


###############################
# FRONTEND - UPDATES (OPTIONAL)
###############################

# Allow Jumper frontend new version to be installed, if available.
# ALLOW_FRONTEND_UPDATES=True

# Limit the version of the Jumper frontend updates.
# By default, each version is automatically limited to bug fixes and security issues.
# You can specify only a major or minor version as limitation. Ex: 1, 1.3, etc.
# Use "*" to allow any version updates.
# MAX_ALLOWED_VERSION=X.Y.Z

# Jumper repository, where to find new released versions.
# JUMPER_REPOSITORY_URL=https://api.github.com/repos/LibertAntoine/Jumper
